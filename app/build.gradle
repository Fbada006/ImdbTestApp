plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    namespace 'com.example.tmdbtestapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.tmdbtestapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField "String", "tmdbApiKey", localProperties['tmdbApiKey']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion rootProject.composeCompilerVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.includeAndroidResources  = true
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$rootProject.core_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecyle_runtime_ktx_version"

    // Compose
    implementation "androidx.compose.runtime:runtime:$rootProject.composeVersion"
    implementation "androidx.compose.ui:ui:$rootProject.composeVersion"
    implementation "androidx.compose.foundation:foundation:$rootProject.composeVersion"
    implementation "androidx.compose.material:material:$rootProject.composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$rootProject.composeVersion"
    implementation "androidx.activity:activity-compose:$rootProject.activityComposeVersion"
    implementation "androidx.navigation:navigation-compose:$rootProject.navigationComposeVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$rootProject.viewmodel_compose_version"
    implementation "androidx.hilt:hilt-navigation-compose:$rootProject.navigation_compose_version"
    implementation "androidx.compose.ui:ui-tooling:$rootProject.composeVersion"
    implementation "androidx.paging:paging-compose:$rootProject.paging_compose_version"

    // Retrofit
    api "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:converter-moshi:$rootProject.moshiConverterVersion"

    // Moshi for parsing the JSON format
    api "com.squareup.moshi:moshi:$rootProject.moshiVersion"
    api "com.squareup.moshi:moshi-kotlin:$rootProject.moshiVersion"

    // Ok http interceptor
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpInterceptor"

    //Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"

    //Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    //Room
    implementation "androidx.room:room-runtime:$rootProject.room_version"
    implementation "androidx.room:room-ktx:$rootProject.room_version"
    implementation "androidx.room:room-paging:$rootProject.room_version"
    kapt "androidx.room:room-compiler:$rootProject.room_version"

    //Coil
    implementation "io.coil-kt:coil-compose:$rootProject.coil_version"

    testImplementation "junit:junit:$rootProject.junit_version"
    testImplementation "com.google.truth:truth:$rootProject.truth_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "androidx.arch.core:core-testing:$rootProject.core_testing_version"
    testImplementation "io.mockk:mockk:$rootProject.mockk_version"
    testImplementation "androidx.test:runner:1.4.0"
    testImplementation 'org.robolectric:robolectric:4.8.1'
    testImplementation "androidx.test.ext:junit-ktx:$rootProject.junit_ext_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-tooling:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$composeVersion"
}
kapt {
    correctErrorTypes true
}